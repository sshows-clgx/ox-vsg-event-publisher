// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eventPublisher.data;

namespace eventPublisher.data.Migrations
{
    [DbContext(typeof(EventPublisherContext))]
    partial class EventPublisherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("eventPublisher.data.entities.ApplicationEntity", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("application_id");

                    b.Property<DateTime>("InsertedUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inserted_utc")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("ApplicationId")
                        .HasName("pk_applications");

                    b.ToTable("applications");
                });

            modelBuilder.Entity("eventPublisher.data.entities.ApplicationEventEntity", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("event_id");

                    b.Property<int>("ApplicationId")
                        .HasColumnName("application_id");

                    b.Property<DateTime>("InsertedUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inserted_utc")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("EventId")
                        .HasName("pk_application_events");

                    b.ToTable("application_events");
                });
#pragma warning restore 612, 618
        }
    }
}
